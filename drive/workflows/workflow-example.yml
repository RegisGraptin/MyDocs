description: A sample workflow that demonstrates the bootstrap functionality with dynamic value capture
name: Sample Calimero Workflow

# Force pull Docker images even if they exist locally
force_pull_image: true
auth_service: true

nodes:
  chain_id: testnet-1
  count: 2
  image: ghcr.io/calimero-network/merod:0.9.0
  prefix: calimero-node

steps:
  # Step 1: Install the application on the first node
  # This captures the application ID for use in subsequent steps
  - name: Install Application on Node 1
    type: install_application
    node: calimero-node-1
    path: logic/res/kv_store.wasm
    dev: true
    outputs:
      app_id:
        field: applicationId
      applicationId:
        field: applicationId

  - name: Wait after install
    type: wait
    seconds: 3
    
  # Step 2: Create a context using the installed application
  # Uses the captured application ID from step 1
  - name: Create Context on Node 1
    type: create_context
    node: calimero-node-1
    application_id: "{{applicationId}}"
    outputs:
      context_id: contextId # Export 'contextId' field as 'context_id'
      member_public_key: memberPublicKey # Export 'memberPublicKey' as 'member_public_key'


  - name: Wait after install
    type: wait
    seconds: 3

  # Step 3: Generate an identity on the second node
  # This captures the public key for use in invitation and joining
  - name: Create Identity on Node 2
    type: create_identity
    node: calimero-node-2
    outputs:
      public_key:
        field: publicKey # Export 'publicKey' as 'public_key'

  # Step 4: Wait for identity creation to complete
  - name: Wait for Identity Creation
    type: wait
    seconds: 5

  # Step 5: Invite the second node to join the context
  # Uses captured values: context ID, member public key, and identity public key
  - name: Invite Node 2 from Node 1
    type: invite_identity
    node: calimero-node-1
    context_id: "{{context_id}}"
    grantee_id: "{{public_key}}"
    granter_id: "{{member_public_key}}"
    capability: member
    outputs:
      invitation: invitation # Export 'invitation' as 'invitation'

  # Step 6: Join the context from the second node
  # Uses captured values: context ID, invitee identity, and invitation data
  - name: Join Context from Node 2
    type: join_context
    node: calimero-node-2
    context_id: "{{context_id}}"
    invitee_id: "{{public_key}}"
    invitation: "{{invitation}}"

  # Step 7: Execute a contract call to set a key-value pair
  # Uses the member public key from the context as the executor
  - name: Create Initial Document
    type: call
    node: calimero-node-1
    context_id: "{{context_id}}"
    executor_public_key: "{{member_public_key}}"
    method: create_document
    args:
      content: "Hello from workflow"
    outputs:
      doc_version:
        field: result
        json: true
        path: output

  # Fetch active match id (robust capture) and wait for propagation
  - name: Wait for Set Operation
    type: wait
    seconds: 5

  # Step 9: Execute a view call to retrieve the stored value
  # Demonstrates cross-node execution using the joined context
  - name: (optional) Read Document
    type: call
    node: calimero-node-1
    context_id: "{{context_id}}"
    executor_public_key: "{{member_public_key}}"
    method: get_document
    args: {}
    outputs:
      document:
        field: result
        json: true
        path: output

# Configuration options
stop_all_nodes: false # Stop all nodes at the end of workflow
restart: false # Don't restart nodes at the beginning of workflow
nuke: false # Nuke the nodes at the end of the workflow
wait_timeout: 60
